.def NELEM1802_ID_Lo	0xf615
.def NELEM1802_ID_Hi	0x7349
.def NELEM1802_Rev		0x1802
.def NELEM1802_Manu_Lo	0x8b36
.def NELEM1802_Manu_Hi  0x1c6c
.def NELEM1802_MEM_MAP_SCREEN			0
.def NELEM1802_MEM_MAP_FONT				1
.def NELEM1802_MEM_MAP_PALETTE			2
.def NELEM1802_MEM_SET_BORDER_COLOR		3

; ID: 0x74fa4cae, version: 0x07c2
; Manufacturer: 0x21544948 (HAROLD_IT)
.def HITHMD2043_ID_Lo			0x4cae
.def HITHMD2043_ID_Hi			0x74fa
.def HITHMD2043_Rev_MinusOne	0x07c1
.def HITHMD2043_Manu_Lo			0x4948
.def HITHMD2043_Manu_Hi			0x2154

.def GEN_CLOCK_ID_Lo	0xb402
.def GEN_CLOCK_ID_Hi	0x12d0

.def GEN_KEYBOARD_ID_Lo	0x7406
.def GEN_KEYBOARD_ID_Hi	0x30cf

; Interrupt messageHandler

.def IntMsg_Keyboard	1
.def IntMsg_Clock		2
.def IntMsg_Sleep		3

:LEM1802_ID   dat 0xFFFF
:CLOCK_ID	  dat 0xFFFF
:KEYBOARD_ID  dat 0xFFFF
:DISKDRIVE_ID dat 0xFFFF


:DEV_InitDevices	
	JSR PushAllRegs8
	
	SET [SchedulerReady], 0
	
	; Inits Keyboard buffer
	SET I, KEYBOARD_BUFFER
	SET C, KEYBOARD_BUFFER
	ADD C, 0x10
	:FillKeyboardBuffer
		STI [I],0
		IFN I, C	
			SET PC, FillKeyboardBuffer
	
	SET [Clock_TicksLo],0
	SET [Clock_TicksHi],0
	
	; Sets up interrupt handler
	IAS DEQOS_InterruptHandler
	
	; Enumerates all devices...
	
	HWN J									; gets number of HW Devices
	IFE J, 0	SET PC, DeviceEnumEnd
	SET I, 0
:DeviceEnumLoop
	HWQ I									; gets info from HW
	
	IFE A, NELEM1802_ID_Lo
			IFE B, NELEM1802_ID_Hi
			; IFE C, NELEM1802_Rev
			IFE X, NELEM1802_Manu_Lo
			IFE Y, NELEM1802_Manu_Hi
			SET PC, Device_LEM1802			; Found the screen !!!
			
	IFE A, HITHMD2043_ID_Lo
			IFE B, HITHMD2043_ID_Hi
			; IFE C, HITHMD2043_Rev
			IFE X, HITHMD2043_Manu_Lo
			IFE Y, HITHMD2043_Manu_Hi
			SET PC, Device_HITHMD2043			; Found the screen !!!
			
	IFE A, GEN_CLOCK_ID_Lo
			IFE B, GEN_CLOCK_ID_Hi
			SET PC, Device_GENCLOCK			; Found the clock !
			
	IFE A, GEN_KEYBOARD_ID_Lo
			IFE B, GEN_KEYBOARD_ID_Hi
			SET PC, Device_GENKeyboard		; Found the keyboard !
			
:ResumeDeviceEnum
	ADD I, 1
	IFN I, J
		SET PC, DeviceEnumLoop
	
	; End of enumeration
	SET PC, DeviceEnumEnd
	
:Device_HITHMD2043
	SET [DISKDRIVE_ID], I
	SET PC, ResumeDeviceEnum
	
:Device_LEM1802
	SET [LEM1802_ID], I
	SET A, NELEM1802_MEM_MAP_SCREEN
	SET B, [DisplayBuffer] ; Setting default screen buffer
	HWI [LEM1802_ID]
	
	SET A, NELEM1802_MEM_MAP_FONT
	SET B, [FontBuffer]
	HWI [LEM1802_ID]
	
	SET A, NELEM1802_MEM_MAP_PALETTE
	SET B, [PaletteBuffer]
	HWI [LEM1802_ID]

	SET A, NELEM1802_MEM_SET_BORDER_COLOR
	SET B, 0
	HWI [LEM1802_ID]
	
	SET PC, ResumeDeviceEnum
	
:Device_GENCLOCK
	SET [CLOCK_ID] , I
	
	SET A, 0	; Sets 60 ticks per sec (1 tick = 16.6666ms)
	SET B, 1
	HWI I
	
	SET A, 2	; Sets interrupt message
	SET B, IntMsg_Clock
	HWI I
	SET PC, ResumeDeviceEnum
	
:Device_GENKeyboard
	SET [KEYBOARD_ID], I
	
	SET A, 0				; Clears buffer
	HWI I
	
	SET A, 3				; Sets up the interrupt
	SET B, IntMsg_Keyboard
	HWI I
	
	SET PC, ResumeDeviceEnum

:DeviceEnumEnd
	SET PC, PopRet8
	




:DEQOS_InterruptHandler
	SET PUSH, EX
	
	IFE A, IntMsg_Keyboard
		SET PC, INT_Keyboard
		
	IFE A, IntMsg_Clock
		SET PC, INT_Clock
		
	IFE A, IntMsg_Sleep
		SET PC, INT_Sleep
		
	SET EX, POP
	RFI A	; Returns from interrupt

:Keyboard_BufferIndex
	dat KEYBOARD_BUFFER
	
;===================================
; KeyboardGet
;===================================

:KeyboardRingIndex
 dat KEYBOARD_BUFFER
 
:KeyboardGet
	SET Z,0
	IFN [CurrTaskConsole], [CurrConsole]
		SET PC, KeyboardGetSkip
	SET PUSH, A
	SET A, [KeyboardRingIndex]
	SET Z, [A]
	IFE Z,0	SET PC, KeyboardGetDone
	SET [A], 0
	ADD A, 1
	IFE A, KEYBOARD_BUFFER_END
		SET A, KEYBOARD_BUFFER
	SET [KeyboardRingIndex], A
:KeyboardGetDone	
	SET A, POP
:KeyboardGetSkip
	SET PC,POP


:INT_Keyboard
	SET PUSH, C
	SET PUSH, B
	
	SET A, 1
	HWI [KEYBOARD_ID]
	
	IFE C,0
		SET PC, INT_KeyEnd
	
	IFG C, 48	; c>'0' && c<'4'
	IFL C, 52
		SET PC, TestTaskSwitch
		
	IFG C, 0x8f	; do not store CTRL and SHIFT
	IFL C, 0x92
		SET PC, INT_KeyEnd
		
:StoreCharacterInBuffer	
	SET B, [Keyboard_BufferIndex]
	IFN [B], 0
		SET PC, INT_KeyEnd
	SET [B], C
	ADD [Keyboard_BufferIndex], 1
	IFE [Keyboard_BufferIndex], KEYBOARD_BUFFER_END
		SET [Keyboard_BufferIndex], KEYBOARD_BUFFER
	
:INT_KeyEnd
	SET B, POP
	SET C, POP
	
	SET EX, POP
	RFI A
	
:TestTaskSwitch
	SET PUSH, X
	SET X, C
	SET A, 2
	SET B, 0x91
	HWI [KEYBOARD_ID]
	
	IFN C,1
		SET PC, NoTaskSwitch
	SET A, X
	SET X, POP
	SET B, POP
	SET C, POP
	
	SUB A, 49
	SET PC, DEQOS_SetCurrentConsole 
	
	;SET EX, POP
	;RFI A
		
:NoTaskSwitch
	SET C, X
	SET X, POP
	SET PC, StoreCharacterInBuffer
	
	

:Clock_Ticks32
:Clock_TicksLo
	dat 0
:Clock_TicksHi
	dat 0

:Clock_msMuledBy332
:Clock_msMuledBy3Lo
	dat 0
:Clock_msMuledBy3Hi
	dat 0

:INT_Clock
	;SET PUSH, B
	;SET PUSH, C
	;SET A, 1
	;HWI [CLOCK_ID]
	;SET [Clock_Ticks], C
	;SET C, POP
	;SET B, POP
	
	ADD [Clock_TicksLo], 1
	ADD [Clock_TicksHi], EX
	
	ADD [Clock_msMuledBy3Lo], 50 ; = 1/60th of a second (in ms) multiplied by 3
	IFE EX,0
		SET PC, ClockNoCatchup
	
	ADD [Clock_msMuledBy3Hi], EX
	
:ClockNoCatchup
	
	IFE 1, [SchedulerReady]
		SET PC, DEQOS_Scheduler
	
	SET EX, POP
	RFI A

:INT_Sleep
	IFE 1, [SchedulerReady]
		SET PC, DEQOS_Scheduler
	
	SET EX, POP
	RFI A

:SendBorderColorToLEM
	SET PUSH, A
	SET PUSH, B
	SET A, NELEM1802_MEM_SET_BORDER_COLOR
	SET B, [BorderColor]
	IFE [CurrTaskConsole], [CurrConsole]
		HWI [LEM1802_ID]
	SET B, POP
	SET A, POP
	SET PC, POP
